import pandas as pd
import os

CRICKET_TIME_LIMIT = pd.Timestamp('19:00:00').time()

def is_regular_attendee(cricket_dates):
    """
    Check if a player is a regular attendee by attending all cricket dates.

    Parameters:
    - cricket_dates (list): List of datetime objects representing cricket attendance dates.

    Returns:
    - bool: True if the player is a regular attendee, False otherwise.
    """
    return len(cricket_dates) == 10 and all(cricket_dates)

def player_ontime(cricket_dates):
    """
    Check if a player consistently arrives on time for cricket sessions.

    Parameters:
    - cricket_dates (list): List of datetime objects representing cricket attendance dates.

    Returns:
    - bool: True if the player consistently arrives on time, False otherwise.
    """
    return all(date.time() <= CRICKET_TIME_LIMIT for date in cricket_dates)

def responsive_players(cricket_dates):
    """
    Check if a player has responded for all cricket dates.

    Parameters:
    - cricket_dates (list): List of datetime objects representing cricket attendance dates.

    Returns:
    - bool: True if the player has responded for all dates, False otherwise.
    """
    return all(pd.notnull(date) for date in cricket_dates)

def get_player_information(file_path):
    """
    Read player information from an Excel file and categorize players based on attendance and responsiveness.

    Parameters:
    - file_path (str): Path to the Excel file containing player information.

    Returns:
    - tuple: Three lists containing regular players, inconsistent players, and non-responsive players.
    """
    if not os.path.isfile(file_path):
        raise FileNotFoundError(f"File not found: {file_path}")

    df = pd.read_excel(file_path)

    regular_players = []
    inconsistent_players = []
    nonresponsive_players = []

    for index, row in df.iterrows():
        player_info = {
            'Last_Name': row['Last_Name'],
            'First_Name': row['First_Name'],
            'Paid_Member': row['Paid_Member'],
            'Cricket_Dates': [row[col] for col in df.columns if col.startswith('Cricket_Date')]
        }

        if is_regular_attendee(player_info['Cricket_Dates']):
            regular_players.append(player_info)
        else:
            inconsistent_players.append(player_info)

        if not responsive_players(player_info['Cricket_Dates']):
            nonresponsive_players.append(player_info)

    return regular_players, inconsistent_players, nonresponsive_players

# Provide the file path of the Excel file
file_path = 'path/to/players.xlsx'

# Call the function to get the player information
regular_players, inconsistent_players, nonresponsive_players = get_player_information(file_path)

# Print the regular players
print("Regular players:")
for player in regular_players:
    print(player)

# Print the inconsistent players
print("Inconsistent players:")
for player in inconsistent_players:
    print(player)

# Print the non-responsive players
print("Non-responsive players:")
for player in nonresponsive_players:
    print(player)
